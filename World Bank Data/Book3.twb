<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Final_Transformed_Digital_Payments_Data' inline='true' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Final_Transformed_Digital_Payments_Data' name='textscan.1vq4mfs0znso771fr4mjy1orc1g1'>
            <connection class='textscan' directory='C:/Users/pavan/Downloads' filename='Final_Transformed_Digital_Payments_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1vq4mfs0znso771fr4mjy1orc1g1' name='Final_Transformed_Digital_Payments_Data.csv' table='[Final_Transformed_Digital_Payments_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='string' name='Adolescent fertility rate (births per 1,000 women ages 15-19)' ordinal='3' />
            <column datatype='string' name='Agriculture, forestry, and fishing, value added (% of GDP)' ordinal='4' />
            <column datatype='string' name='Annual freshwater withdrawals, total (% of internal resources)' ordinal='5' />
            <column datatype='string' name='Births attended by skilled health staff (% of total)' ordinal='6' />
            <column datatype='string' name='CO2 emissions (metric tons per capita)' ordinal='7' />
            <column datatype='string' name='Contraceptive prevalence, any method (% of married women ages 15-49)' ordinal='8' />
            <column datatype='string' name='Domestic credit provided by financial sector (% of GDP)' ordinal='9' />
            <column datatype='string' name='Electric power consumption (kWh per capita)' ordinal='10' />
            <column datatype='string' name='Energy use (kg of oil equivalent per capita)' ordinal='11' />
            <column datatype='string' name='Exports of goods and services (% of GDP)' ordinal='12' />
            <column datatype='string' name='External debt stocks, total (DOD, current US$)' ordinal='13' />
            <column datatype='string' name='Fertility rate, total (births per woman)' ordinal='14' />
            <column datatype='string' name='Foreign direct investment, net inflows (BoP, current US$)' ordinal='15' />
            <column datatype='string' name='Forest area (sq. km)' ordinal='16' />
            <column datatype='string' name='GDP (current US$)' ordinal='17' />
            <column datatype='string' name='GDP growth (annual %)' ordinal='18' />
            <column datatype='string' name='GNI per capita, Atlas method (current US$)' ordinal='19' />
            <column datatype='string' name='GNI per capita, PPP (current international $)' ordinal='20' />
            <column datatype='string' name='GNI, Atlas method (current US$)' ordinal='21' />
            <column datatype='string' name='GNI, PPP (current international $)' ordinal='22' />
            <column datatype='string' name='Gross capital formation (% of GDP)' ordinal='23' />
            <column datatype='string' name='High-technology exports (% of manufactured exports)' ordinal='24' />
            <column datatype='string' name='Immunization, measles (% of children ages 12-23 months)' ordinal='25' />
            <column datatype='string' name='Imports of goods and services (% of GDP)' ordinal='26' />
            <column datatype='string' name='Income share held by lowest 20%' ordinal='27' />
            <column datatype='string' name='Industry (including construction), value added (% of GDP)' ordinal='28' />
            <column datatype='string' name='Inflation, GDP deflator (annual %)' ordinal='29' />
            <column datatype='string' name='Life expectancy at birth, total (years)' ordinal='30' />
            <column datatype='string' name='Merchandise trade (% of GDP)' ordinal='31' />
            <column datatype='string' name='Military expenditure (% of GDP)' ordinal='32' />
            <column datatype='string' name='Mobile cellular subscriptions (per 100 people)' ordinal='33' />
            <column datatype='string' name='Mortality rate, under-5 (per 1,000 live births)' ordinal='34' />
            <column datatype='string' name='Net barter terms of trade index (2015 = 100)' ordinal='35' />
            <column datatype='integer' name='Net migration' ordinal='36' />
            <column datatype='string' name='Net official development assistance and official aid received (current US$)' ordinal='37' />
            <column datatype='string' name='Personal remittances, received (current US$)' ordinal='38' />
            <column datatype='string' name='Population density (people per sq. km of land area)' ordinal='39' />
            <column datatype='string' name='Population growth (annual %)' ordinal='40' />
            <column datatype='string' name='Population, total' ordinal='41' />
            <column datatype='string' name='Poverty headcount ratio at $2.15 a day (2017 PPP) (% of population)' ordinal='42' />
            <column datatype='string' name='Poverty headcount ratio at national poverty lines (% of population)' ordinal='43' />
            <column datatype='string' name='Prevalence of HIV, total (% of population ages 15-49)' ordinal='44' />
            <column datatype='string' name='Prevalence of underweight, weight for age (% of children under 5)' ordinal='45' />
            <column datatype='string' name='Primary completion rate, total (% of relevant age group)' ordinal='46' />
            <column datatype='string' name='Revenue, excluding grants (% of GDP)' ordinal='47' />
            <column datatype='string' name='School enrollment, primary (% gross)' ordinal='48' />
            <column datatype='string' name='School enrollment, primary and secondary (gross), gender parity index (GPI)' ordinal='49' />
            <column datatype='string' name='School enrollment, secondary (% gross)' ordinal='50' />
            <column datatype='string' name='Statistical Capacity Score (Overall Average) (scale 0 - 100)' ordinal='51' />
            <column datatype='string' name='Surface area (sq. km)' ordinal='52' />
            <column datatype='string' name='Tax revenue (% of GDP)' ordinal='53' />
            <column datatype='string' name='Terrestrial and marine protected areas (% of total territorial area)' ordinal='54' />
            <column datatype='string' name='Time required to start a business (days)' ordinal='55' />
            <column datatype='string' name='Total debt service (% of exports of goods, services and primary income)' ordinal='56' />
            <column datatype='string' name='Urban population growth (annual %)' ordinal='57' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1vq4mfs0znso771fr4mjy1orc1g1' name='Final_Transformed_Digital_Payments_Data.csv' table='[Final_Transformed_Digital_Payments_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='string' name='Adolescent fertility rate (births per 1,000 women ages 15-19)' ordinal='3' />
            <column datatype='string' name='Agriculture, forestry, and fishing, value added (% of GDP)' ordinal='4' />
            <column datatype='string' name='Annual freshwater withdrawals, total (% of internal resources)' ordinal='5' />
            <column datatype='string' name='Births attended by skilled health staff (% of total)' ordinal='6' />
            <column datatype='string' name='CO2 emissions (metric tons per capita)' ordinal='7' />
            <column datatype='string' name='Contraceptive prevalence, any method (% of married women ages 15-49)' ordinal='8' />
            <column datatype='string' name='Domestic credit provided by financial sector (% of GDP)' ordinal='9' />
            <column datatype='string' name='Electric power consumption (kWh per capita)' ordinal='10' />
            <column datatype='string' name='Energy use (kg of oil equivalent per capita)' ordinal='11' />
            <column datatype='string' name='Exports of goods and services (% of GDP)' ordinal='12' />
            <column datatype='string' name='External debt stocks, total (DOD, current US$)' ordinal='13' />
            <column datatype='string' name='Fertility rate, total (births per woman)' ordinal='14' />
            <column datatype='string' name='Foreign direct investment, net inflows (BoP, current US$)' ordinal='15' />
            <column datatype='string' name='Forest area (sq. km)' ordinal='16' />
            <column datatype='string' name='GDP (current US$)' ordinal='17' />
            <column datatype='string' name='GDP growth (annual %)' ordinal='18' />
            <column datatype='string' name='GNI per capita, Atlas method (current US$)' ordinal='19' />
            <column datatype='string' name='GNI per capita, PPP (current international $)' ordinal='20' />
            <column datatype='string' name='GNI, Atlas method (current US$)' ordinal='21' />
            <column datatype='string' name='GNI, PPP (current international $)' ordinal='22' />
            <column datatype='string' name='Gross capital formation (% of GDP)' ordinal='23' />
            <column datatype='string' name='High-technology exports (% of manufactured exports)' ordinal='24' />
            <column datatype='string' name='Immunization, measles (% of children ages 12-23 months)' ordinal='25' />
            <column datatype='string' name='Imports of goods and services (% of GDP)' ordinal='26' />
            <column datatype='string' name='Income share held by lowest 20%' ordinal='27' />
            <column datatype='string' name='Industry (including construction), value added (% of GDP)' ordinal='28' />
            <column datatype='string' name='Inflation, GDP deflator (annual %)' ordinal='29' />
            <column datatype='string' name='Life expectancy at birth, total (years)' ordinal='30' />
            <column datatype='string' name='Merchandise trade (% of GDP)' ordinal='31' />
            <column datatype='string' name='Military expenditure (% of GDP)' ordinal='32' />
            <column datatype='string' name='Mobile cellular subscriptions (per 100 people)' ordinal='33' />
            <column datatype='string' name='Mortality rate, under-5 (per 1,000 live births)' ordinal='34' />
            <column datatype='string' name='Net barter terms of trade index (2015 = 100)' ordinal='35' />
            <column datatype='integer' name='Net migration' ordinal='36' />
            <column datatype='string' name='Net official development assistance and official aid received (current US$)' ordinal='37' />
            <column datatype='string' name='Personal remittances, received (current US$)' ordinal='38' />
            <column datatype='string' name='Population density (people per sq. km of land area)' ordinal='39' />
            <column datatype='string' name='Population growth (annual %)' ordinal='40' />
            <column datatype='string' name='Population, total' ordinal='41' />
            <column datatype='string' name='Poverty headcount ratio at $2.15 a day (2017 PPP) (% of population)' ordinal='42' />
            <column datatype='string' name='Poverty headcount ratio at national poverty lines (% of population)' ordinal='43' />
            <column datatype='string' name='Prevalence of HIV, total (% of population ages 15-49)' ordinal='44' />
            <column datatype='string' name='Prevalence of underweight, weight for age (% of children under 5)' ordinal='45' />
            <column datatype='string' name='Primary completion rate, total (% of relevant age group)' ordinal='46' />
            <column datatype='string' name='Revenue, excluding grants (% of GDP)' ordinal='47' />
            <column datatype='string' name='School enrollment, primary (% gross)' ordinal='48' />
            <column datatype='string' name='School enrollment, primary and secondary (gross), gender parity index (GPI)' ordinal='49' />
            <column datatype='string' name='School enrollment, secondary (% gross)' ordinal='50' />
            <column datatype='string' name='Statistical Capacity Score (Overall Average) (scale 0 - 100)' ordinal='51' />
            <column datatype='string' name='Surface area (sq. km)' ordinal='52' />
            <column datatype='string' name='Tax revenue (% of GDP)' ordinal='53' />
            <column datatype='string' name='Terrestrial and marine protected areas (% of total territorial area)' ordinal='54' />
            <column datatype='string' name='Time required to start a business (days)' ordinal='55' />
            <column datatype='string' name='Total debt service (% of exports of goods, services and primary income)' ordinal='56' />
            <column datatype='string' name='Urban population growth (annual %)' ordinal='57' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adolescent fertility rate (births per 1,000 women ages 15-19)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Adolescent fertility rate (births per 1,000 women ages 15-19)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Adolescent fertility rate (births per 1,000 women ages 15-19)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture, forestry, and fishing, value added (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Agriculture, forestry, and fishing, value added (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Agriculture, forestry, and fishing, value added (% of GDP)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual freshwater withdrawals, total (% of internal resources)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Annual freshwater withdrawals, total (% of internal resources)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Annual freshwater withdrawals, total (% of internal resources)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Births attended by skilled health staff (% of total)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Births attended by skilled health staff (% of total)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Births attended by skilled health staff (% of total)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 emissions (metric tons per capita)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CO2 emissions (metric tons per capita)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>CO2 emissions (metric tons per capita)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contraceptive prevalence, any method (% of married women ages 15-49)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contraceptive prevalence, any method (% of married women ages 15-49)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Contraceptive prevalence, any method (% of married women ages 15-49)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Domestic credit provided by financial sector (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Domestic credit provided by financial sector (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Domestic credit provided by financial sector (% of GDP)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric power consumption (kWh per capita)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric power consumption (kWh per capita)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Electric power consumption (kWh per capita)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy use (kg of oil equivalent per capita)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Energy use (kg of oil equivalent per capita)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Energy use (kg of oil equivalent per capita)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports of goods and services (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Exports of goods and services (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Exports of goods and services (% of GDP)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>External debt stocks, total (DOD, current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[External debt stocks, total (DOD, current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>External debt stocks, total (DOD, current US$)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertility rate, total (births per woman)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Fertility rate, total (births per woman)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Fertility rate, total (births per woman)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Foreign direct investment, net inflows (BoP, current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Foreign direct investment, net inflows (BoP, current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Foreign direct investment, net inflows (BoP, current US$)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forest area (sq. km)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Forest area (sq. km)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Forest area (sq. km)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP (current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GDP (current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>GDP (current US$)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP growth (annual %)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GDP growth (annual %)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>GDP growth (annual %)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI per capita, Atlas method (current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GNI per capita, Atlas method (current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>GNI per capita, Atlas method (current US$)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI per capita, PPP (current international $)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GNI per capita, PPP (current international $)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>GNI per capita, PPP (current international $)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI, Atlas method (current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GNI, Atlas method (current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>GNI, Atlas method (current US$)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GNI, PPP (current international $)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GNI, PPP (current international $)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>GNI, PPP (current international $)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross capital formation (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gross capital formation (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Gross capital formation (% of GDP)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High-technology exports (% of manufactured exports)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[High-technology exports (% of manufactured exports)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>High-technology exports (% of manufactured exports)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Immunization, measles (% of children ages 12-23 months)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Immunization, measles (% of children ages 12-23 months)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Immunization, measles (% of children ages 12-23 months)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports of goods and services (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Imports of goods and services (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Imports of goods and services (% of GDP)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income share held by lowest 20%</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income share held by lowest 20%]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Income share held by lowest 20%</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry (including construction), value added (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Industry (including construction), value added (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Industry (including construction), value added (% of GDP)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation, GDP deflator (annual %)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Inflation, GDP deflator (annual %)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Inflation, GDP deflator (annual %)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Merchandise trade (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Merchandise trade (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Merchandise trade (% of GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military expenditure (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Military expenditure (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Military expenditure (% of GDP)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile cellular subscriptions (per 100 people)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mobile cellular subscriptions (per 100 people)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Mobile cellular subscriptions (per 100 people)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, under-5 (per 1,000 live births)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mortality rate, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Mortality rate, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net barter terms of trade index (2015 = 100)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Net barter terms of trade index (2015 = 100)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Net barter terms of trade index (2015 = 100)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net migration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Net migration]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Net migration</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net official development assistance and official aid received (current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Net official development assistance and official aid received (current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Net official development assistance and official aid received (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal remittances, received (current US$)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Personal remittances, received (current US$)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Personal remittances, received (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population density (people per sq. km of land area)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Population density (people per sq. km of land area)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Population density (people per sq. km of land area)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population growth (annual %)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Population growth (annual %)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Population growth (annual %)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population, total</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Population, total]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Population, total</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty headcount ratio at $2.15 a day (2017 PPP) (% of population)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Poverty headcount ratio at $2.15 a day (2017 PPP) (% of population)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Poverty headcount ratio at $2.15 a day (2017 PPP) (% of population)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty headcount ratio at national poverty lines (% of population)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Poverty headcount ratio at national poverty lines (% of population)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Poverty headcount ratio at national poverty lines (% of population)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence of HIV, total (% of population ages 15-49)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Prevalence of HIV, total (% of population ages 15-49)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Prevalence of HIV, total (% of population ages 15-49)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prevalence of underweight, weight for age (% of children under 5)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Prevalence of underweight, weight for age (% of children under 5)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Prevalence of underweight, weight for age (% of children under 5)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary completion rate, total (% of relevant age group)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary completion rate, total (% of relevant age group)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Primary completion rate, total (% of relevant age group)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue, excluding grants (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Revenue, excluding grants (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Revenue, excluding grants (% of GDP)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School enrollment, primary (% gross)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[School enrollment, primary (% gross)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>School enrollment, primary (% gross)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School enrollment, primary and secondary (gross), gender parity index (GPI)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[School enrollment, primary and secondary (gross), gender parity index (GPI)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>School enrollment, primary and secondary (gross), gender parity index (GPI)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School enrollment, secondary (% gross)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[School enrollment, secondary (% gross)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>School enrollment, secondary (% gross)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Statistical Capacity Score (Overall Average) (scale 0 - 100)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Statistical Capacity Score (Overall Average) (scale 0 - 100)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Statistical Capacity Score (Overall Average) (scale 0 - 100)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Surface area (sq. km)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Surface area (sq. km)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Surface area (sq. km)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax revenue (% of GDP)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tax revenue (% of GDP)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Tax revenue (% of GDP)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Terrestrial and marine protected areas (% of total territorial area)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Terrestrial and marine protected areas (% of total territorial area)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Terrestrial and marine protected areas (% of total territorial area)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time required to start a business (days)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time required to start a business (days)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Time required to start a business (days)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total debt service (% of exports of goods, services and primary income)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Total debt service (% of exports of goods, services and primary income)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Total debt service (% of exports of goods, services and primary income)</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban population growth (annual %)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Urban population growth (annual %)]</local-name>
            <parent-name>[Final_Transformed_Digital_Payments_Data.csv]</parent-name>
            <remote-alias>Urban population growth (annual %)</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Exports of goods and services (% of GDP)]' role='dimension' type='nominal' />
      <column datatype='string' name='[GDP (current US$)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Final_Transformed_Digital_Payments_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2]' role='measure' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Exports of goods and services (% of GDP)]' derivation='None' name='[none:Exports of goods and services (% of GDP):nk]' pivot='key' type='nominal' />
      <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, Dem. People&apos;s Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa Eastern and Southern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa Western and Central&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Exports of goods and services (% of GDP):nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;..&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;211.278205574688&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;193.861100918864&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;186.552565489511&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;169.000456473101&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;165.29067194108&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;137.087781434496&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;111.456595122386&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;99.364781949748&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;95.7314965608346&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;95.0377110559096&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;94.1460703633174&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;93.9863687204707&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;93.752223412679&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;91.2082568358865&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;87.2819819912741&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;86.8472768953372&quot;</bucket>
            </map>
            <map to='#376592'>
              <bucket>&quot;86.3893567977832&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;85.501822384777&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;83.1246051240884&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;76.9501497302441&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;76.9356153921115&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;76.4523242521964&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;74.8945722590528&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;71.9861714532338&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;70.0123894394154&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;69.1940036628315&quot;</bucket>
            </map>
            <map to='#3f6c9a'>
              <bucket>&quot;68.4390157719015&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;68.3352522969151&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;65.7794286732777&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;63.8403524940413&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;65.0613511558615&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;63.8122418894455&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;63.7082362285368&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;62.3981114603991&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;62.0831749838848&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;61.3838511319225&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;62.685122551137&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;60.0526953696522&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;59.1661677235029&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;56.6640040132072&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;55.6787059720359&quot;</bucket>
            </map>
            <map to='#4879a7'>
              <bucket>&quot;55.5023923444976&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;55.4949237065952&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;55.3945984703191&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;54.689582143537&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;53.037134494032&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;52.9104245879136&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;52.7060478794867&quot;</bucket>
            </map>
            <map to='#4d7eab'>
              <bucket>&quot;52.3749558700201&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;52.3495891863239&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27.4332549476976&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;36.8951399233113&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;51.7955862875501&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;51.5328616489687&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;51.1886750209775&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;50.9239297257281&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;49.7781074297992&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;50.0136476951451&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;49.3628967245122&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;49.1475664185143&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;49.1368296393821&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;49.598968701974&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;48.3404283318429&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;48.2717642210409&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;48.2453576335649&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;48.0727752275959&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24.8242929845957&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28.2007916133298&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;46.9575200918485&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;46.2726141874507&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;46.1947984814584&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;46.584149807126&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;45.3386783701115&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;44.8096391556492&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;43.8311625631477&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;43.6701925605664&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;43.4700422277754&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;43.4229256568991&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;42.9727137613077&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;42.6438025364865&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;41.9166981271526&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;41.7812771063673&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;40.9556683838857&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;41.2404935723512&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;40.8740642479781&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;40.5665549763493&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;40.2212744390156&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;40.1939977143859&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;40.0139049760333&quot;</bucket>
            </map>
            <map to='#6d9ec5'>
              <bucket>&quot;38.5842021257178&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;38.45081627188&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;37.5292694651635&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;37.395422208546&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;36.7370952189614&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;36.63029312773&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;35.6707253636962&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;35.4566186119589&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;35.3352257952674&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;35.1283783191081&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;34.8977395429708&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;34.4783350054499&quot;</bucket>
            </map>
            <map to='#78a8ce'>
              <bucket>&quot;34.686399716266&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;33.8450475582139&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26.637170998716&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;30.8009634534503&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34.7273456347487&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;56.3193543899861&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;73.1378611789462&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;33.5384457911339&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;33.4279398444639&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;32.6115548585963&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;31.8781619986439&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;31.8396226415094&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;31.7283799087485&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;31.3222324102825&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;31.1779288319146&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;31.746070673017&quot;</bucket>
            </map>
            <map to='#81b2d6'>
              <bucket>&quot;30.3737702511294&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;29.3177265575969&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;29.1718799310307&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;29.0625334425269&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;28.3851063222784&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25.9656204261015&quot;</bucket>
            </map>
            <map to='#87b6d9'>
              <bucket>&quot;28.1889031982231&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;27.9552457711186&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;27.269361157999&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;26.9581676614168&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;26.8158865548081&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;25.4271241344048&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24.8261535135854&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28.2205724632022&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;39.2458026513483&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;24.8438275049014&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;24.4924493728078&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;24.2401087425825&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;23.9705678360642&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;22.7868820072667&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;22.4859525410837&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;22.0627315413808&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;21.6532095498925&quot;</bucket>
            </map>
            <map to='#96c3e2'>
              <bucket>&quot;21.5417231170208&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;21.4841803323427&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;21.096822594212&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;20.6770017470271&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;20.5837279579533&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;20.0455368597898&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;22.5760892765723&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27.0391126111849&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31.2897128251787&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;19.2916346889815&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;19.0155395632265&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;18.5418508887133&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;27.8134067809622&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31.3629459328335&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;17.3140444959318&quot;</bucket>
            </map>
            <map to='#a2cce8'>
              <bucket>&quot;16.2995616770379&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;15.4213759945808&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;15.0870258208479&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;14.8178862322648&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;12.8822264348985&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;12.7160796545449&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;12.2663817279324&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;12.0219954333361&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;12.215242879819&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;12.3005&quot;</bucket>
            </map>
            <map to='#aed5ec'>
              <bucket>&quot;11.7731183936917&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;10.5460179307063&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;13.512216822537&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;22.4159246935814&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;9.62732919254658&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;8.72094805219432&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;8.24504858922511&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;7.2387601144858&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;6.76061737753058&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;20.4649231433308&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;4.97109850795647&quot;</bucket>
            </map>
            <map to='#b7dcf0'>
              <bucket>&quot;4.56965740984646&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;1.57116162619555&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26.0078910824879&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;21.7798679107873&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31.0678102306532&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31.2229090711391&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;50.4816541597264&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27.2564767990857&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31.2964338486083&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;21.2848599135682&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;26.086744446194&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34.2882740997436&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;70.1112038434175&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25.720181564497&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28.5514362209962&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;69.1437912672709&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26.9561087798501&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31.1339712318263&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26.560309826794&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24.6530720472221&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:GDP (current US$):nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;..&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;25439700000000&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;17963171479205.3&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;4082469490797.68&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;4256410760723.75&quot;</bucket>
            </map>
            <map to='#2d5a86'>
              <bucket>&quot;3416645826052.87&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;3089072722400.14&quot;</bucket>
            </map>
            <map to='#2e5b88'>
              <bucket>&quot;2779092236505.85&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;2240422427458.58&quot;</bucket>
            </map>
            <map to='#305d89'>
              <bucket>&quot;2161483369422.01&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;2049737165407.98&quot;</bucket>
            </map>
            <map to='#315e8a'>
              <bucket>&quot;1920095779022.73&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;1692956646855.7&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;1673916469026.56&quot;</bucket>
            </map>
            <map to='#33608d'>
              <bucket>&quot;1465854089286.47&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;1417800466262.65&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;1319100220407.72&quot;</bucket>
            </map>
            <map to='#35628f'>
              <bucket>&quot;1108571517285.38&quot;</bucket>
            </map>
            <map to='#36638f'>
              <bucket>&quot;1009398719033.08&quot;</bucket>
            </map>
            <map to='#366390'>
              <bucket>&quot;907118435952.688&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;818426550206.45&quot;</bucket>
            </map>
            <map to='#376492'>
              <bucket>&quot;688125010520.52&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;631133384439.944&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;593348981537.661&quot;</bucket>
            </map>
            <map to='#396694'>
              <bucket>&quot;591718144602.141&quot;</bucket>
            </map>
            <map to='#3a6794'>
              <bucket>&quot;583435595579.963&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;533140011838.276&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;525002447652.773&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;507063968273.313&quot;</bucket>
            </map>
            <map to='#3c6997'>
              <bucket>&quot;495423343049.622&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;476747720364.742&quot;</bucket>
            </map>
            <map to='#3d6b98'>
              <bucket>&quot;472624597402.898&quot;</bucket>
            </map>
            <map to='#3e6b99'>
              <bucket>&quot;470941926750.741&quot;</bucket>
            </map>
            <map to='#3e6c9a'>
              <bucket>&quot;466788426791.966&quot;</bucket>
            </map>
            <map to='#3f6d9a'>
              <bucket>&quot;460201265527.977&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;413493207349.265&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;407027451714.616&quot;</bucket>
            </map>
            <map to='#406e9c'>
              <bucket>&quot;408802378904.838&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;405270850099.387&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;400167196948.707&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;404284326110.463&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;374697366359.244&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;359838583490.063&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;343622114560.409&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;301024724911.923&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;290565654835.809&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;300691354864.855&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;282649838009.729&quot;</bucket>
            </map>
            <map to='#4676a4'>
              <bucket>&quot;264182173793.103&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;255196660987.427&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;248101705541.399&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;236258302839.653&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;242631573320.79&quot;</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>&quot;225496328925.494&quot;</bucket>
            </map>
            <map to='#497aa8'>
              <bucket>&quot;217581324512.059&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27608729369422&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;194998449769.085&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;177337436677.365&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;160502737251.047&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;175363265306.122&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;130912558829.84&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;115461711688.965&quot;</bucket>
            </map>
            <map to='#4d7eac'>
              <bucket>&quot;126783471597.671&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;14148420366435.9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;875393693658.084&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;115049476000&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;114667360208.062&quot;</bucket>
            </map>
            <map to='#4f80ae'>
              <bucket>&quot;113537368176.13&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;113434800000&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;106782770714.619&quot;</bucket>
            </map>
            <map to='#5182af'>
              <bucket>&quot;113420008178.793&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;95003330315.8754&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;81641807865.7591&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;90346169914.9349&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;80391853887.4049&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;78721058823.5294&quot;</bucket>
            </map>
            <map to='#5586b3'>
              <bucket>&quot;76522511800&quot;</bucket>
            </map>
            <map to='#5687b3'>
              <bucket>&quot;75732311666.039&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;74403578363.4355&quot;</bucket>
            </map>
            <map to='#5788b5'>
              <bucket>&quot;73766052451.5256&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;72793457588.4367&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;71600049650.195&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1944198197077.57&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21167325456079.4&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;71177146197.4951&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;70974490450.4944&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;70018715016.8293&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;69243626028.6696&quot;</bucket>
            </map>
            <map to='#5c8db9'>
              <bucket>&quot;64718641221.216&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;63563401043.5044&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;62263466263.7375&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;60063475466.3446&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;56542857142.8571&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;51662241775.0629&quot;</bucket>
            </map>
            <map to='#6192bc'>
              <bucket>&quot;48653381780.6397&quot;</bucket>
            </map>
            <map to='#6192bd'>
              <bucket>&quot;46303552449.3542&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;45752336035.9846&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;45567304608.4764&quot;</bucket>
            </map>
            <map to='#6495be'>
              <bucket>&quot;44383297872.3404&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;44008282877.9606&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;43644068310.851&quot;</bucket>
            </map>
            <map to='#6697c0'>
              <bucket>&quot;41722295229.2279&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;40828247303.5337&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;40932030049.5644&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;38100812958.5196&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;32488720000&quot;</bucket>
            </map>
            <map to='#699ac3'>
              <bucket>&quot;31717699764.3621&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;31603619041.7903&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;30053575132.142&quot;</bucket>
            </map>
            <map to='#6c9dc4'>
              <bucket>&quot;29504829319.3169&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;29250524418.0855&quot;</bucket>
            </map>
            <map to='#6d9ec6'>
              <bucket>&quot;29163782138.3415&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;28064529851.3098&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;27684264748.2324&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;27366627153.0852&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;24780791063.7131&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;24473906673.7086&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;24042287326.5729&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;21071739224.8918&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;20999229260.4955&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;20355541962.8512&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;20253551884.6055&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;19513474648.2429&quot;</bucket>
            </map>
            <map to='#76a7cc'>
              <bucket>&quot;19111900000&quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;18916378860.5488&quot;</bucket>
            </map>
            <map to='#77a8ce'>
              <bucket>&quot;18827176529.6983&quot;</bucket>
            </map>
            <map to='#78a9ce'>
              <bucket>&quot;18820064797.8379&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1647744371553.08&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;37752366428370&quot;</bucket>
            </map>
            <map to='#79a9cf'>
              <bucket>&quot;18406835954.6695&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;18125564514.2664&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;17396792699.5489&quot;</bucket>
            </map>
            <map to='#7babd0'>
              <bucket>&quot;17146471626.3963&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;17097760723.9201&quot;</bucket>
            </map>
            <map to='#7cadd2'>
              <bucket>&quot;16681536466.7183&quot;</bucket>
            </map>
            <map to='#7dadd2'>
              <bucket>&quot;15816996654.5788&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;15671583939.9889&quot;</bucket>
            </map>
            <map to='#7eafd3'>
              <bucket>&quot;15468785203.7532&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;15342278919.4009&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;15297192798.9771&quot;</bucket>
            </map>
            <map to='#80b1d5'>
              <bucket>&quot;14718388489.2086&quot;</bucket>
            </map>
            <map to='#81b1d5'>
              <bucket>&quot;14508333280.4233&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;13563132102.1663&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;13311487445.0686&quot;</bucket>
            </map>
            <map to='#84b3d7'>
              <bucket>&quot;13164667626.9363&quot;</bucket>
            </map>
            <map to='#84b4d8'>
              <bucket>&quot;12948726653.811&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;12914932655.685&quot;</bucket>
            </map>
            <map to='#86b6d9'>
              <bucket>&quot;12897400000&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10324332231.7802&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1424210446281.73&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;28075737913541.5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3543339785308.86&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;12704149840.2283&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;12029633746.519&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;11543966558.842&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;10492123387.7931&quot;</bucket>
            </map>
            <map to='#8bbadb'>
              <bucket>&quot;10419541202.0382&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;9780863578.97688&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;9623318718.31459&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1175091814528.12&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;21193771562304.2&quot;</bucket>
            </map>
            <map to='#8dbcdd'>
              <bucket>&quot;9409473517.95304&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;8784002931.68665&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;8341225241.45693&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;7546000000&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;6844827379.30952&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;6229801580.79157&quot;</bucket>
            </map>
            <map to='#92c1e0'>
              <bucket>&quot;6170638746.965&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;5814661208.90544&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;5699950000&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;4979979546.0123&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;4790922065.6101&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;4094563859.43556&quot;</bucket>
            </map>
            <map to='#98c5e3'>
              <bucket>&quot;4001046970&quot;</bucket>
            </map>
            <map to='#99c6e3'>
              <bucket>&quot;3620987993.32637&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;3555929833.05051&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;3544707788.05664&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;3515108859.95465&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;61729512123777.8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6302490414791.98&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;3352031094.22914&quot;</bucket>
            </map>
            <map to='#9ec9e6'>
              <bucket>&quot;3338722827.66241&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;3204753000&quot;</bucket>
            </map>
            <map to='#9fcbe6'>
              <bucket>&quot;3075180834.72417&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;2830507575.6841&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;14207593902747.6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2058942959164.7&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;2382618615.01694&quot;</bucket>
            </map>
            <map to='#a2cde8'>
              <bucket>&quot;2343703703.7037&quot;</bucket>
            </map>
            <map to='#a3cee8'>
              <bucket>&quot;2236502124.16956&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;2226862134.08787&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;2187194563.48605&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;1867733333.33333&quot;</bucket>
            </map>
            <map to='#a7d0ea'>
              <bucket>&quot;1633559092.08861&quot;</bucket>
            </map>
            <map to='#a8d1ea'>
              <bucket>&quot;1597204340.62902&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;1588438144.37685&quot;</bucket>
            </map>
            <map to='#aad2eb'>
              <bucket>&quot;1537088724.46126&quot;</bucket>
            </map>
            <map to='#abd3eb'>
              <bucket>&quot;1242519407.27815&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;1215379155.67282&quot;</bucket>
            </map>
            <map to='#add4ec'>
              <bucket>&quot;1138808881.1&quot;</bucket>
            </map>
            <map to='#aed5ed'>
              <bucket>&quot;1055811723.74753&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;965638864.921867&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1696713423187.56&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5352536850675.35&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;56211584699649.4&quot;</bucket>
            </map>
            <map to='#b0d6ed'>
              <bucket>&quot;948559259.259259&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;871000000&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;832945205.637185&quot;</bucket>
            </map>
            <map to='#b3d8ee'>
              <bucket>&quot;607440740.740741&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;542686976.457587&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;424000000&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1185137703650.99&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25344209837077.1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2822821779328.87&quot;</bucket>
            </map>
            <map to='#b6daef'>
              <bucket>&quot;258774475.097656&quot;</bucket>
            </map>
            <map to='#b7dbf0'>
              <bucket>&quot;223353014.294593&quot;</bucket>
            </map>
            <map to='#b8dcf0'>
              <bucket>&quot;151647846.128953&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;59065979.0227679&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;38281934115375.6&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4390347563465.91&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1677609783949.53&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;38810361603320.4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4426622170629&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1906134056808.84&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;59849878381707.5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6001569526439.77&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;636018280142.001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;100879560825391&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8171521483867.57&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;30110929970107.6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;528124562235.072&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;94867024971.9129&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16746544871112&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2060531397309.08&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;980688371242.572&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;40573962163610.3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5189746524698.23&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1617245641605.59&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;30712490177155.8&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4129330109662.66&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530807158164.414&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Final_Transformed_Digital_Payments_Data.csv' id='Final_Transformed_Digital_Payments_Data.csv_A1A0168DF8D745F28894A05FC4A086A2'>
            <properties context=''>
              <relation connection='textscan.1vq4mfs0znso771fr4mjy1orc1g1' name='Final_Transformed_Digital_Payments_Data.csv' table='[Final_Transformed_Digital_Payments_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='string' name='Adolescent fertility rate (births per 1,000 women ages 15-19)' ordinal='3' />
                  <column datatype='string' name='Agriculture, forestry, and fishing, value added (% of GDP)' ordinal='4' />
                  <column datatype='string' name='Annual freshwater withdrawals, total (% of internal resources)' ordinal='5' />
                  <column datatype='string' name='Births attended by skilled health staff (% of total)' ordinal='6' />
                  <column datatype='string' name='CO2 emissions (metric tons per capita)' ordinal='7' />
                  <column datatype='string' name='Contraceptive prevalence, any method (% of married women ages 15-49)' ordinal='8' />
                  <column datatype='string' name='Domestic credit provided by financial sector (% of GDP)' ordinal='9' />
                  <column datatype='string' name='Electric power consumption (kWh per capita)' ordinal='10' />
                  <column datatype='string' name='Energy use (kg of oil equivalent per capita)' ordinal='11' />
                  <column datatype='string' name='Exports of goods and services (% of GDP)' ordinal='12' />
                  <column datatype='string' name='External debt stocks, total (DOD, current US$)' ordinal='13' />
                  <column datatype='string' name='Fertility rate, total (births per woman)' ordinal='14' />
                  <column datatype='string' name='Foreign direct investment, net inflows (BoP, current US$)' ordinal='15' />
                  <column datatype='string' name='Forest area (sq. km)' ordinal='16' />
                  <column datatype='string' name='GDP (current US$)' ordinal='17' />
                  <column datatype='string' name='GDP growth (annual %)' ordinal='18' />
                  <column datatype='string' name='GNI per capita, Atlas method (current US$)' ordinal='19' />
                  <column datatype='string' name='GNI per capita, PPP (current international $)' ordinal='20' />
                  <column datatype='string' name='GNI, Atlas method (current US$)' ordinal='21' />
                  <column datatype='string' name='GNI, PPP (current international $)' ordinal='22' />
                  <column datatype='string' name='Gross capital formation (% of GDP)' ordinal='23' />
                  <column datatype='string' name='High-technology exports (% of manufactured exports)' ordinal='24' />
                  <column datatype='string' name='Immunization, measles (% of children ages 12-23 months)' ordinal='25' />
                  <column datatype='string' name='Imports of goods and services (% of GDP)' ordinal='26' />
                  <column datatype='string' name='Income share held by lowest 20%' ordinal='27' />
                  <column datatype='string' name='Industry (including construction), value added (% of GDP)' ordinal='28' />
                  <column datatype='string' name='Inflation, GDP deflator (annual %)' ordinal='29' />
                  <column datatype='string' name='Life expectancy at birth, total (years)' ordinal='30' />
                  <column datatype='string' name='Merchandise trade (% of GDP)' ordinal='31' />
                  <column datatype='string' name='Military expenditure (% of GDP)' ordinal='32' />
                  <column datatype='string' name='Mobile cellular subscriptions (per 100 people)' ordinal='33' />
                  <column datatype='string' name='Mortality rate, under-5 (per 1,000 live births)' ordinal='34' />
                  <column datatype='string' name='Net barter terms of trade index (2015 = 100)' ordinal='35' />
                  <column datatype='integer' name='Net migration' ordinal='36' />
                  <column datatype='string' name='Net official development assistance and official aid received (current US$)' ordinal='37' />
                  <column datatype='string' name='Personal remittances, received (current US$)' ordinal='38' />
                  <column datatype='string' name='Population density (people per sq. km of land area)' ordinal='39' />
                  <column datatype='string' name='Population growth (annual %)' ordinal='40' />
                  <column datatype='string' name='Population, total' ordinal='41' />
                  <column datatype='string' name='Poverty headcount ratio at $2.15 a day (2017 PPP) (% of population)' ordinal='42' />
                  <column datatype='string' name='Poverty headcount ratio at national poverty lines (% of population)' ordinal='43' />
                  <column datatype='string' name='Prevalence of HIV, total (% of population ages 15-49)' ordinal='44' />
                  <column datatype='string' name='Prevalence of underweight, weight for age (% of children under 5)' ordinal='45' />
                  <column datatype='string' name='Primary completion rate, total (% of relevant age group)' ordinal='46' />
                  <column datatype='string' name='Revenue, excluding grants (% of GDP)' ordinal='47' />
                  <column datatype='string' name='School enrollment, primary (% gross)' ordinal='48' />
                  <column datatype='string' name='School enrollment, primary and secondary (gross), gender parity index (GPI)' ordinal='49' />
                  <column datatype='string' name='School enrollment, secondary (% gross)' ordinal='50' />
                  <column datatype='string' name='Statistical Capacity Score (Overall Average) (scale 0 - 100)' ordinal='51' />
                  <column datatype='string' name='Surface area (sq. km)' ordinal='52' />
                  <column datatype='string' name='Tax revenue (% of GDP)' ordinal='53' />
                  <column datatype='string' name='Terrestrial and marine protected areas (% of total territorial area)' ordinal='54' />
                  <column datatype='string' name='Time required to start a business (days)' ordinal='55' />
                  <column datatype='string' name='Total debt service (% of exports of goods, services and primary income)' ordinal='56' />
                  <column datatype='string' name='Urban population growth (annual %)' ordinal='57' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Export of goods and services</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Final_Transformed_Digital_Payments_Data' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03ouilt1ppby4p1abx44p0g8vj2z'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Exports of goods and services (% of GDP)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Exports of goods and services (% of GDP)]' derivation='None' name='[none:Exports of goods and services (% of GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]' included-values='in-range'>
            <min>2022</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]' field-type='quantitative' max='32006028.862031035' min='-13218153.220125835' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]' field-type='quantitative' max='17735405.284854896' min='-8348403.693561933' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' />
              <color column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]' />
              <geometry column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-color' value='#86bcb6' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]</rows>
        <cols>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{34CC8F25-A193-4220-9F5E-B1AE74D29015}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Gdp vs Export VS Import</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Final_Transformed_Digital_Payments_Data' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' />
          </datasources>
          <datasource-dependencies datasource='federated.03ouilt1ppby4p1abx44p0g8vj2z'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Exports of goods and services (% of GDP)]' role='dimension' type='nominal' />
            <column datatype='string' name='[GDP (current US$)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Imports of goods and services (% of GDP)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Exports of goods and services (% of GDP)]' derivation='None' name='[none:Exports of goods and services (% of GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports of goods and services (% of GDP)]' derivation='None' name='[none:Imports of goods and services (% of GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;1.57116162619555&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;10.5460179307063&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;11.7731183936917&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;111.456595122386&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;12.0219954333361&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;12.215242879819&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;12.2663817279324&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;12.3005&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;12.7160796545449&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;12.8822264348985&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;13.512216822537&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;137.087781434496&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;14.8178862322648&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;15.0870258208479&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;15.4213759945808&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;16.2995616770379&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;165.29067194108&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;169.000456473101&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;17.3140444959318&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;18.5418508887133&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;186.552565489511&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;19.0155395632265&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;19.2916346889815&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;193.861100918864&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;20.0455368597898&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;20.4649231433308&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;20.5837279579533&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;20.6770017470271&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;21.096822594212&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;21.2848599135682&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;21.4841803323427&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;21.5417231170208&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;21.6532095498925&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;21.7798679107873&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;211.278205574688&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;22.0627315413808&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;22.4159246935814&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;22.4859525410837&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;22.5760892765723&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;22.7868820072667&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;23.9705678360642&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;24.2401087425825&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;24.4924493728078&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;24.6530720472221&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;24.8242929845957&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;24.8261535135854&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;24.8438275049014&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;25.4271241344048&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;25.720181564497&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;25.9656204261015&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.0078910824879&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.086744446194&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.560309826794&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.637170998716&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.8158865548081&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.9561087798501&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;26.9581676614168&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;27.0391126111849&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;27.2564767990857&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;27.269361157999&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;27.4332549476976&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;27.8134067809622&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;27.9552457711186&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;28.1889031982231&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;28.2007916133298&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;28.2205724632022&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;28.3851063222784&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;28.5514362209962&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;29.0625334425269&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;29.1718799310307&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;29.3177265575969&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;30.3737702511294&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;30.8009634534503&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.0678102306532&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.1339712318263&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.1779288319146&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.2229090711391&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.2897128251787&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.2964338486083&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.3222324102825&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.3629459328335&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.7283799087485&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.746070673017&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.8396226415094&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;31.8781619986439&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;32.6115548585963&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;33.4279398444639&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;33.5384457911339&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;33.8450475582139&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;34.2882740997436&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;34.4783350054499&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;34.686399716266&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;34.7273456347487&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;34.8977395429708&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;35.1283783191081&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;35.3352257952674&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;35.4566186119589&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;35.6707253636962&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;36.63029312773&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;36.7370952189614&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;36.8951399233113&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;37.395422208546&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;37.5292694651635&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;38.45081627188&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;38.5842021257178&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;39.2458026513483&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;4.56965740984646&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;4.97109850795647&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;40.0139049760333&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;40.1939977143859&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;40.2212744390156&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;40.5665549763493&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;40.8740642479781&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;40.9556683838857&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;41.2404935723512&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;41.7812771063673&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;41.9166981271526&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;42.6438025364865&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;42.9727137613077&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;43.4229256568991&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;43.4700422277754&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;43.6701925605664&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;43.8311625631477&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;44.8096391556492&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;45.3386783701115&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;46.1947984814584&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;46.2726141874507&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;46.584149807126&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;46.9575200918485&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;48.0727752275959&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;48.2453576335649&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;48.2717642210409&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;48.3404283318429&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;49.1368296393821&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;49.1475664185143&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;49.3628967245122&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;49.598968701974&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;49.7781074297992&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;50.0136476951451&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;50.4816541597264&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;50.9239297257281&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;51.1886750209775&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;51.5328616489687&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;51.7955862875501&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;52.3495891863239&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;52.3749558700201&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;52.7060478794867&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;52.9104245879136&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;53.037134494032&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;54.689582143537&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;55.3945984703191&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;55.4949237065952&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;55.5023923444976&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;55.6787059720359&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;56.3193543899861&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;56.6640040132072&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;59.1661677235029&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;6.76061737753058&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;60.0526953696522&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;61.3838511319225&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;62.0831749838848&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;62.3981114603991&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;62.685122551137&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;63.7082362285368&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;63.8122418894455&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;63.8403524940413&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;65.0613511558615&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;65.7794286732777&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;68.3352522969151&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;68.4390157719015&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;69.1437912672709&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;69.1940036628315&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;7.2387601144858&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;70.0123894394154&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;70.1112038434175&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;71.9861714532338&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;73.1378611789462&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;74.8945722590528&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;76.4523242521964&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;76.9356153921115&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;76.9501497302441&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;8.24504858922511&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;8.72094805219432&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;83.1246051240884&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;85.501822384777&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;86.3893567977832&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;86.8472768953372&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;87.2819819912741&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;9.62732919254658&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;91.2082568358865&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;93.752223412679&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;93.9863687204707&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;94.1460703633174&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;95.0377110559096&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;95.7314965608346&quot;' />
              <groupfilter function='member' level='[none:Exports of goods and services (% of GDP):nk]' member='&quot;99.364781949748&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]'>
            <groupfilter function='level-members' level='[none:GDP (current US$):nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;1.12767242781895&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;100.847256812855&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;104.756686805323&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;114.832535885167&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;121.613343704704&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;15.3509522986127&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;15.5852112162007&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;15.5904550761212&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;150.309923551673&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;152.454341842161&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;16.6046561044181&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;17.012173477223&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;17.4668162873967&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;171.193558160329&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;177.235462859059&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;18.3217870519029&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;189.929795326265&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;19.2944545091196&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;19.5994834684814&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;19.7096203060062&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;20.897740835675&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;20.9008560311697&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;21.5143076851726&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;21.8960790564233&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;21.9952966217202&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;22.0682689403222&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;22.0826241818649&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;22.4833064937891&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;22.5023431826144&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;22.7649563556696&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;23.2923962207993&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;23.344221851308&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;23.7070584496258&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;24.7471747979467&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;24.7479221336646&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;24.7816202562159&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;24.9005000827648&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;24.9491832824919&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.0350654136129&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.3020090221706&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.6714029086801&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.8693052497212&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.9136073037361&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.9301665533409&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.930166553341&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;25.9833024118738&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;26.3323490057027&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;26.4428200967021&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;26.4933269802098&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;26.5752050921688&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;27.0250579484673&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;27.0611083421564&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;27.1191482737657&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;27.1380775946671&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;27.4918441152018&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;27.7824417948098&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;28.5183836908566&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;28.7759756546983&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;28.812053338445&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;28.8316550517501&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;28.9663435183249&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.0948442618018&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.1033177100296&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.1177073552238&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.2803105204475&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.2907901656525&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.564897948508&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.6074969605819&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.7807410570762&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.894069644207&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;29.9130979215381&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;30.4669876590852&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;30.7680560120772&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;30.9647199265084&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;31.393572567705&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;31.5222896279694&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;31.5417718866927&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;31.8318683075852&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;31.8828584994588&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;32.1687940178649&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;32.1913725292585&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;32.3211355916973&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;32.93307&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;33.0993016869282&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;33.5852184222079&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;33.713848808281&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;33.7998053544537&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;33.8657342364723&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;34.0298720669105&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;34.3492687876203&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;34.8581335064267&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;35.0656469520052&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;35.1443439254798&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;35.6544175752575&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;35.6904164675991&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;35.7242487986309&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;36.0944788262568&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;36.3275045449898&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;37.0013951142509&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;38.1465847745296&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;38.5634528845527&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;38.6805961034014&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.0926403559116&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.230901724996&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.347628986834&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.3762256861478&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.5741545384448&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.6624422431459&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;39.7656947844082&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;41.9607220899707&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;41.9970194019999&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;42.5859274525546&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;42.6382368095628&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;42.6675143827438&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;43.2196773655909&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;44.0315802620838&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;44.309583862345&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;45.408463716602&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;45.4710694372152&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;46.1341436614809&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;46.9858160390279&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;47.5539448328746&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;47.5918210637636&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;47.7320229051715&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;47.7542583145142&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;48.2646450676456&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;48.7891320172335&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;48.9564100381499&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;48.9694208032101&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;49.8436888093274&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;49.8869466677672&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;50.9928446789957&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;52.0061806676053&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;52.2502479277708&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;52.7167993146703&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;52.7991317831396&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;52.9138913991378&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;53.2490480631213&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;53.5162561541354&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;53.694823962165&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;54.5030974172237&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;54.8053421254314&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;54.8518801235902&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;55.033285505371&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;55.5757284622893&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;55.6206584931632&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;56.2162068186165&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;56.3062433184629&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;56.7101561890548&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;57.8746329177422&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;58.859974393428&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;58.9172745882207&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;60.584609143737&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;61.2494233894432&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;61.3770528748072&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;61.6022637210822&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;62.0375584900384&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;62.5145555056573&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;62.7281789142169&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;62.7776777583371&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;62.9404229329272&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;63.2339333939957&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;63.807467586191&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;65.3514994302101&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;65.4020124188691&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;65.5845602480127&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;67.3590799449558&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;68.0965589644263&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;68.9888257228862&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;69.1563842811223&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;69.1865949724474&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;69.4934719856075&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;69.7136366403792&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;70.5927343196735&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;71.0632410257765&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;71.2665787886548&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;73.6703554752263&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;74.3657429805244&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;74.8103761182678&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;75.4707339692595&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;75.9433962264151&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;76.5158929136866&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;77.3346514533075&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;77.7267508610792&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;78.5255304558617&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;82.9595565797888&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;86.0656584756432&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;88.8558953535585&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;90.6506245294112&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;91.7436183206665&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;91.8807617480669&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;94.7197465529035&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;95.5156572383674&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;95.9236787890509&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;96.2732919254658&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;97.1795714280965&quot;' />
              <groupfilter function='member' level='[none:Imports of goods and services (% of GDP):nk]' member='&quot;97.3606623152697&quot;' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]' included-values='in-range'>
            <min>2022</min>
            <max>2022</max>
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' direction='DESC' measure-to-sort-by='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk] / ([federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk] / ([federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk] / [federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{52492F88-01A7-4921-A652-C43B51F59C5B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Final_Transformed_Digital_Payments_Data' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' />
          </datasources>
          <datasource-dependencies datasource='federated.03ouilt1ppby4p1abx44p0g8vj2z'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Exports of goods and services (% of GDP)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Imports of goods and services (% of GDP)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Exports of goods and services (% of GDP)]' derivation='None' name='[none:Exports of goods and services (% of GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[Imports of goods and services (% of GDP)]' derivation='None' name='[none:Imports of goods and services (% of GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]' />
              <color column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{099DAE66-F317-403D-98F0-923AB6319779}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Final_Transformed_Digital_Payments_Data' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03ouilt1ppby4p1abx44p0g8vj2z'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[GDP (current US$)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP (current US$)]' derivation='None' name='[none:GDP (current US$):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]' included-values='in-range'>
            <min>2022</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]' field-type='quantitative' max='62973380.648512617' min='-44229216.687817693' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]' field-type='quantitative' max='14861466.723384891' min='-5250344.5519035198' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' />
              <color column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]' />
              <geometry column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Latitude (generated)]</rows>
        <cols>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CF3EC7DA-FE0F-436A-ABE9-22102A36804C}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Final_Transformed_Digital_Payments_Data' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03ouilt1ppby4p1abx44p0g8vj2z'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Tax revenue (% of GDP)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tax revenue (% of GDP)]' derivation='None' name='[none:Tax revenue (% of GDP):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Tax revenue (% of GDP):nk]</rows>
        <cols>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{A61B25E4-86B9-4EA3-9823-9B93E90F20EB}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{806E242E-DB68-4822-A32E-A5F03C8E60BF}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Final_Transformed_Digital_Payments_Data' name='federated.03ouilt1ppby4p1abx44p0g8vj2z' />
          </datasources>
          <datasource-dependencies datasource='federated.03ouilt1ppby4p1abx44p0g8vj2z'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Population, total]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population, total]' derivation='None' name='[none:Population, total:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:Country Name:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Country Name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]' included-values='in-range'>
            <min>2022</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</column>
            <column>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Population, total:nk]</rows>
        <cols>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{C74547C7-B189-420E-B859-A899E524D37D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1800' minheight='800' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' param='horz' type-v2='layout-flow' w='99112' x='444' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='99112' x='444' y='1000'>
              <zone h='49000' id='3' name='Sheet 1' w='49556' x='444' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sheet 2' w='49556' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Sheet 4' w='99112' x='444' y='50000'>
                <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='99112' x='444' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 1' w='49556' x='444' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Sheet 2' w='49556' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Sheet 4' w='99112' x='444' y='50000'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{025E2CA0-2B86-47CD-A465-71654E6E12C8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:School enrollment, secondary (% gross):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Terrestrial and marine protected areas (% of total territorial area):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDA93BF9-F955-4AC1-878F-428D130BFE7B}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:CO2 emissions (metric tons per capita):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Tax revenue (% of GDP):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A79F32ED-CEC2-484E-9F1B-F5214F7198A6}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B23682B-5FAD-4A8F-BA42-5D621361C9F0}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]&#10;[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Exports of goods and services (% of GDP):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Imports of goods and services (% of GDP):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88A83EF1-DEC0-4FDB-A3C3-BD9712CDFAD7}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Code:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:GDP (current US$):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E280ED84-6311-4AA5-B7DF-DA35A008F682}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{D4D617BF-EAA5-4AC6-AE04-F1CFACBAA701}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A41817E4-4923-487F-8BCA-A1CC208471DC}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Country Name:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Population, total:nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:School enrollment, secondary (% gross):nk]</field>
            <field>[federated.03ouilt1ppby4p1abx44p0g8vj2z].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BE88A5C-5842-49AD-A8D0-C0FFD0D097DA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      re4YIXZpd/pk0ikePnyMYfvgm1w0++SkgIdXLZb2Cmcx4vKyBYlHvdXG8aFXP6c/MciqAm+9
      d87B3g6zQZOH10NSiUu9fk2i5MmlJd57910GEwN8i6t6Ezmtc/nO24iFCrl06qlYiT3eeONt
      QkRCZ8F1/QpSRXK6wttvvI7tg4LP/fcuONit8d677+JFIr41o359RSjIPH78CEHWWIw69EcL
      sjmVN372FtvH+zx8+5cYtk+5XOS9n/89SfGQ/vl9nDhD7M65vr4mEBXO3r1PJKkU9BSvvvoT
      9g9PkKWn27bbvOb84fvEssLlVR17FVIpFzGmI959eMXeboW3Xvs52uY2zrTPeb1PpZjm7OKK
      8cLEGHdpdQZkMirX19csTJtus05vMKa2ucmDn/0tUvmIXv2cZnfIzlaFn736Q0o7B7z7jz8j
      u7vHpH3No/ceIKlpHl9cIisa+WzmSYxBEDzhLn1SH3n48CG9Xo8oivA8D13X17vWScKf/dmf
      /buPDR0BWRJIBJG/+0//AU1L4aY2SBLI+CMedGyOt/P4KRExSjj/xau8O4MXNgXeq8dU0yv+
      6i//mrvf/x7v32/iGXXeu2xwcuMWzZHFf/tf/wmb5U/fMf0i6Ha6SKrG0nTJ6Rpzx6HX7aNl
      0rQaXY5uP8+026K2c5Pp8hGiCJ4foGoJ2wc7GE4bWeCDBrHR9F00LJRSlVJ+QuS7zJyErCpQ
      2dxmNjfQMyrxykSv7iF6C+ZuyMt3n+OyO+LwcA/vE6r+kxh0XcUyLbYPN6k3mqS0FCQRWjqL
      ZVmcHO9Tys4IFl3Grki0WHDvuROmM4OMJpNWNSzLYj7oo+s5Am6wXS1/sNWfwbYtRv0O+dIG
      cSJycHzAcBGTLxeo15sosoCWyWFZJs26web21ify6/eObmCtAmTX5c7L9+hfXgJQrGxSGM0R
      BIXDgx2SJKG6vct0fkEqnaNSzOImKoEbc7OiYAkZ8FeIeoEoDAmBSb9NoVwhYr2YXzgW3WaD
      6tYmCCkO97aJE9g/OsH2YkpZlamiYFr2RxxiPgtJkuA4DrB+Xep2u1xfX+O6Lrdv3wY+ngWK
      IvZPbtF59D6eonLj6IDN7QPkeEF3ErGR/ajgbe3kOeRFAzPR0TWFh+8/4vkXbiOn8hRzGnGU
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='141'>
      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
      p0I7oQI+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACM0lEQVR4nO3ToRGDUBQAwUeG+R5H/9Xh8JikiyBut4Izt13X9V1rDZQ8zzPneW77WmuO
      43i7B/7qvu+Zmfm83AGvMgBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkPYDmPMLlLyMtSMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACF0lEQVR4nO3TMQEAIAzAMIZ/z0MGRxMFfTq7uweCZmbu7wj4yQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMA
      aQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5Bm
      ANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYg
      zQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIM
      QJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCk
      GYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoB
      SDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0
      A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSDMAaQYgzQCkGYA0A5BmANIMQJoBSHtb
      egWA0FAUAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='Sheet 7' width='144'>
      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
      /wcmOSAnV+mNPgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
